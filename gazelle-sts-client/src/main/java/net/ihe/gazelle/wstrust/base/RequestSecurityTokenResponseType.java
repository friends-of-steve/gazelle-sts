/**
 * RequestSecurityTokenResponseType.java
 * <p>
 * File generated from the _200512::RequestSecurityTokenResponseType uml Class
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.wstrust.base;

import net.ihe.gazelle.wstrust.policy.AppliesToType;
import org.w3c.dom.Document;
import org.w3c.dom.Node;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

// End of user code


/**
 * Description of the class RequestSecurityTokenResponseType.
 *
 * @author cel
 * @version $Id: $Id
 */

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RequestSecurityTokenResponseType", propOrder = {
        "tokenType", "lifetime", "appliesTo", "keySize", "keyType", "requestedSecurityToken", "requestedAttachedReference", "requestedTokenCancelled", "status",
        "context"
})
@XmlRootElement(name = "RequestSecurityTokenResponse")
public class RequestSecurityTokenResponseType implements java.io.Serializable {

    /**
     *
     */
    private static final long serialVersionUID = 1L;

    @XmlElement(name = "TokenType")
    private TokenTypeEnum tokenType;

    @XmlElement(name = "Lifetime")
    private LifetimeType lifetime;

    @XmlElement(name = "AppliesTo")
    private AppliesToType appliesTo;

    @XmlElement(name = "KeyType")
    private KeyTypeEnum keyType;

    @XmlElement(name = "KeySize")
    private Integer keySize;

    @XmlAttribute(name = "Context")
    private String context;

    @XmlElement(name = "RequestedSecurityToken")
    private RequestedSecurityTokenType requestedSecurityToken;

    @XmlElement(name = "RequestedAttachedReference")
    private RequestedReferenceType requestedAttachedReference;

    @XmlElement(name = "RequestedTokenCancelled")
    private RequestedTokenCancelledType requestedTokenCancelled;

    @XmlElement(name = "Status")
    private StatusType status;

    /**
     * An attribute containing marshalled element node
     */
    @XmlTransient
    private Node _xmlNodePresentation;

    /**
     * <p>Getter for the field <code>tokenType</code>.</p>
     *
     * @return a {@link net.ihe.gazelle.wstrust.base.TokenTypeEnum} object.
     */
    public TokenTypeEnum getTokenType() {
        return tokenType;
    }

    /**
     * <p>Setter for the field <code>tokenType</code>.</p>
     *
     * @param tokenType a {@link net.ihe.gazelle.wstrust.base.TokenTypeEnum} object.
     */
    public void setTokenType(TokenTypeEnum tokenType) {
        this.tokenType = tokenType;
    }

    /**
     * <p>Getter for the field <code>lifetime</code>.</p>
     *
     * @return a {@link net.ihe.gazelle.wstrust.base.LifetimeType} object.
     */
    public LifetimeType getLifetime() {
        return lifetime;
    }

    /**
     * <p>Setter for the field <code>lifetime</code>.</p>
     *
     * @param lifetime a {@link net.ihe.gazelle.wstrust.base.LifetimeType} object.
     */
    public void setLifetime(LifetimeType lifetime) {
        this.lifetime = lifetime;
    }

    /**
     * <p>Getter for the field <code>appliesTo</code>.</p>
     *
     * @return a {@link net.ihe.gazelle.wstrust.policy.AppliesToType} object.
     */
    public AppliesToType getAppliesTo() {
        return appliesTo;
    }

    /**
     * <p>Setter for the field <code>appliesTo</code>.</p>
     *
     * @param appliesTo a {@link net.ihe.gazelle.wstrust.policy.AppliesToType} object.
     */
    public void setAppliesTo(AppliesToType appliesTo) {
        this.appliesTo = appliesTo;
    }

    /**
     * <p>Getter for the field <code>keyType</code>.</p>
     *
     * @return a {@link net.ihe.gazelle.wstrust.base.KeyTypeEnum} object.
     */
    public KeyTypeEnum getKeyType() {
        return keyType;
    }

    /**
     * <p>Setter for the field <code>keyType</code>.</p>
     *
     * @param keyType a {@link net.ihe.gazelle.wstrust.base.KeyTypeEnum} object.
     */
    public void setKeyType(KeyTypeEnum keyType) {
        this.keyType = keyType;
    }

    /**
     * <p>Getter for the field <code>keySize</code>.</p>
     *
     * @return a {@link java.lang.Integer} object.
     */
    public Integer getKeySize() {
        return keySize;
    }

    /**
     * <p>Setter for the field <code>keySize</code>.</p>
     *
     * @param keySize a {@link java.lang.Integer} object.
     */
    public void setKeySize(Integer keySize) {
        this.keySize = keySize;
    }

    /**
     * <p>Getter for the field <code>context</code>.</p>
     *
     * @return a {@link java.lang.String} object.
     */
    public String getContext() {
        return context;
    }

    /**
     * <p>Setter for the field <code>context</code>.</p>
     *
     * @param context a {@link java.lang.String} object.
     */
    public void setContext(String context) {
        this.context = context;
    }

    /**
     * <p>Getter for the field <code>requestedSecurityToken</code>.</p>
     *
     * @return a {@link net.ihe.gazelle.wstrust.base.RequestedSecurityTokenType} object.
     */
    public RequestedSecurityTokenType getRequestedSecurityToken() {
        return requestedSecurityToken;
    }

    /**
     * <p>Setter for the field <code>requestedSecurityToken</code>.</p>
     *
     * @param requestedSecurityToken a {@link net.ihe.gazelle.wstrust.base.RequestedSecurityTokenType} object.
     */
    public void setRequestedSecurityToken(RequestedSecurityTokenType requestedSecurityToken) {
        this.requestedSecurityToken = requestedSecurityToken;
    }

    /**
     * <p>Getter for the field <code>requestedAttachedReference</code>.</p>
     *
     * @return a {@link net.ihe.gazelle.wstrust.base.RequestedReferenceType} object.
     */
    public RequestedReferenceType getRequestedAttachedReference() {
        return requestedAttachedReference;
    }

    /**
     * <p>Setter for the field <code>requestedAttachedReference</code>.</p>
     *
     * @param requestedAttachedReference a {@link net.ihe.gazelle.wstrust.base.RequestedReferenceType} object.
     */
    public void setRequestedAttachedReference(RequestedReferenceType requestedAttachedReference) {
        this.requestedAttachedReference = requestedAttachedReference;
    }

    /**
     * <p>Getter for the field <code>requestedTokenCancelled</code>.</p>
     *
     * @return a {@link net.ihe.gazelle.wstrust.base.RequestedTokenCancelledType} object.
     */
    public RequestedTokenCancelledType getRequestedTokenCancelled() {
        return requestedTokenCancelled;
    }

    /**
     * <p>Setter for the field <code>requestedTokenCancelled</code>.</p>
     *
     * @param requestedTokenCancelled a {@link net.ihe.gazelle.wstrust.base.RequestedTokenCancelledType} object.
     */
    public void setRequestedTokenCancelled(RequestedTokenCancelledType requestedTokenCancelled) {
        this.requestedTokenCancelled = requestedTokenCancelled;
    }

    /**
     * <p>Getter for the field <code>status</code>.</p>
     *
     * @return a {@link net.ihe.gazelle.wstrust.base.StatusType} object.
     */
    public StatusType getStatus() {
        return status;
    }

    /**
     * <p>Setter for the field <code>status</code>.</p>
     *
     * @param status a {@link net.ihe.gazelle.wstrust.base.StatusType} object.
     */
    public void setStatus(StatusType status) {
        this.status = status;
    }

    /**
     * <p>Getter for the field <code>_xmlNodePresentation</code>.</p>
     *
     * @return a {@link org.w3c.dom.Node} object.
     */
    public Node get_xmlNodePresentation() {
        if (_xmlNodePresentation == null) {
            JAXBContext jc;
            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
            dbf.setNamespaceAware(true);
            DocumentBuilder db = null;
            Document doc = null;
            try {
                db = dbf.newDocumentBuilder();
                doc = db.newDocument();
            } catch (ParserConfigurationException e1) {
            }
            try {
                jc = JAXBContext.newInstance("net.ihe.gazelle.wstrust.base");
                Marshaller m = jc.createMarshaller();
                m.marshal(this, doc);
                _xmlNodePresentation = doc.getElementsByTagNameNS("http://docs.oasis-open.org/ws-sx/ws-trust/200512",
                        "RequestSecurityTokenResponse").item(0);
            } catch (JAXBException e) {
                try {
                    db = dbf.newDocumentBuilder();
                    _xmlNodePresentation = db.newDocument();
                } catch (Exception ee) {
                }
            }
        }
        return _xmlNodePresentation;
    }

    /**
     * <p>Setter for the field <code>_xmlNodePresentation</code>.</p>
     *
     * @param _xmlNodePresentation a {@link org.w3c.dom.Node} object.
     */
    public void set_xmlNodePresentation(Node _xmlNodePresentation) {
        this._xmlNodePresentation = _xmlNodePresentation;
    }


}
